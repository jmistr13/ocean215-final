# -*- coding: utf-8 -*-
"""J_Mistr_Final_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13JAjsJn9EVtxuQ7PnxGQkjkWQOzofcUD

#Imports
Cartopy, shapely, matplot, pandas, xarray, etc.
"""

#Cartopy and shapely don't play nice in Colab specifically. Need no-binary versions
# source: https://linuxtut.com/en/8f0d69169dc6ab753e08/
!grep '^deb ' /etc/apt/sources.list | \
  sed 's/^deb /deb-src /g' | \
  tee /etc/apt/sources.list.d/deb-src.list
!apt-get update

!apt-get -qq build-dep python3-cartopy
!apt-get -qq remove python-shapely python3-shapely

!pip install --no-binary shapely shapely --force
!pip install --no-binary cartopy cartopy==0.17.0


#install other packages used in this example
!pip install netcdf4 
!pip install cmocean

#imports
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import xarray as xr
from scipy import stats
from datetime import datetime

!pip install netcdf4

"""#File Names"""

from google.colab import drive #mount drive
drive.mount('/content/drive')

#DATA IS STORED IN MY STUDENT FOLDER IN A FOLDER CALLED 'Data'

#define file paths
oxy_file_2008 = '/content/drive/My Drive/Jesse G Mistr/Data/gcoos_2008_07_mass_concentration_of_oxygen_in_sea_water.csv'
oxy_file_2011 = '/content/drive/My Drive/Jesse G Mistr/Data/gcoos_2011_07_mass_concentration_of_oxygen_in_sea_water.csv'
plankton_file_2008 = '/content/drive/My Drive/Jesse G Mistr/Data/316o-080614_us-05201.csv'
plankton_file_2008_txt = '/content/drive/My Drive/Jesse G Mistr/Data/316o-080614_us-05201.txt'
plankton_file_2011 = '/content/drive/My Drive/Jesse G Mistr/Data/316o-110625_us-05201.csv'

df_oxy_2008 = pd.read_csv(oxy_file_2008)
df_oxy_2011 = pd.read_csv(oxy_file_2011)

#DISL Station (2008)
disl_data_2008 = df_oxy_2008[df_oxy_2008['network'].str.contains('DISL')] #gets data from DISL station
july_range = disl_data_2008.index[disl_data_2008['date'] <='2008-07-16T23:30:00Z'] #Finds indexes of July range | look up reference (HW3?)
disl_data_2008 = disl_data_2008.loc[july_range] #data array from July
time_2008 = pd.to_datetime(disl_data_2008['date'], format='%Y-%m-%dT%H:%M:%SZ') #converts date strings to datetimes 
#https://www.dataquest.io/blog/datetime-in-pandas/; #https://stackoverflow.com/questions/18618288/how-do-i-convert-dates-into-iso-8601-datetime-format-in-a-pandas-dataframe 
depth_2008 = disl_data_2008['vertical_datum'] #array of depths in range
oconc_2008 = disl_data_2008['mass_concentration_of_oxygen_in_sea_wate'] #array of DO in range

#display(disl_data_2008)

#DISL Station (2011)
disl_data_2011= df_oxy_2011[df_oxy_2011['network'].str.contains('DISL')]#finds DISL station data
july_range_2011 = disl_data_2011.index[disl_data_2011['date'] <='2011-07-16T23:30:00Z'] #gets index range of July
disl_data_2011 = disl_data_2011.loc[july_range_2011] #makes array of july data
time_2011 = pd.to_datetime(disl_data_2011['date'], format='%Y-%m-%dT%H:%M:%SZ') #converts dates to datetime format
depth_2011 = disl_data_2011['vertical_datum']#array of depths in range
oconc_2011 = disl_data_2011['mass_concentration_of_oxygen_in_sea_wate'] #array of DO in range

#Averages
oxy_2008_mean = oconc_2008.mean() #takes means and finds the difference between them
oxy_2011_mean = oconc_2011.mean()
oxy_diff = abs(oxy_2008_mean - oxy_2011_mean) 

print('2008 mean:',oxy_2008_mean,'|| 2011 mean:',oxy_2011_mean) #prints mean values

"""Dissolved Oxygen Data"""

#referenced HW3 pt3, In class 11/10
#Creating Oxygen concentration figure
fig, (ax0, ax1) = plt.subplots(2, figsize = (20,16)) #build figure
#2008 Plot
plot_2008 = ax0.scatter(time_2008, depth_2008, c=oconc_2008, cmap='magma', vmax = 14, vmin=0, alpha=.8)
fig.colorbar(plot_2008, label = 'Mass Concentration of Oxygen', ax=ax0, alpha=1)
ax0.invert_yaxis()
ax0.grid(alpha=.5)
  #labels
ax0.set_xlabel('Date (Y-M-D)', size=14, family='serif')
ax0.set_ylabel('Vertical Datum', size=14, family='serif')
ax0.set_title('Oxygen Concentration in the Gulf of Mexico (2008)', size=18, family='serif')
#2011 Plot
plot_2011 = ax1.scatter(time_2011, depth_2011, c=oconc_2011, cmap='magma', vmax = 14, vmin=0, alpha=.8)
fig.colorbar(plot_2011, label = 'Mass Concentration of Oxygen (ug/L)', ax=ax1, alpha=1)
ax1.invert_yaxis()
ax1.grid(alpha=.5)
  #labels
ax1.set_xlabel('Date (Y-M-D)', size=14, family='serif')
ax1.set_ylabel('Vertical Datum', size=14, family='serif')
ax1.set_title('Oxygen Concentration in the Gulf of Mexico (2011)', size=18, family='serif')

"""Zooplankton Data"""

from numpy.lib.function_base import average
#2008 Plankton Data
df_plank_2008 = pd.read_csv(plankton_file_2008, header=15,
                            usecols=(1,2,3,4,5,6,7,23,24)) #https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html
for i in range(1,48): #converts day number from string to int
  string_day = df_plank_2008['DAY'][i]
  num_day = int(string_day) #https://realpython.com/convert-python-string-to-int/
  df_plank_2008['DAY'][i] = num_day

for i in range(1,48): #converts volume value from string to float
  string_vol = df_plank_2008[' VALUE-per-volu'][i]
  string_vol = string_vol.strip() #https://www.digitalocean.com/community/tutorials/python-remove-spaces-from-string
  num_vol = float(string_vol)
  df_plank_2008[' VALUE-per-volu'][i] = num_vol

for i in range(1,48): #converts local decimal time value from string to float
  string_time = df_plank_2008['TIMEloc'][i]
  string_time = string_time.strip()
  num_time = float(string_time)
  df_plank_2008['TIMEloc'][i] = num_time

df_plank_2008 = df_plank_2008[1:] #removes index 0 b/c it is not a number
df_plk8 = df_plank_2008[23:] #removes first values where month =/= July
volume_2008 = df_plk8[' VALUE-per-volu'] #stores volume values
day_2008 = (df_plk8['DAY']*24 + df_plk8['TIMEloc'])/24 #stores day values
#display(df_plk8)

#2011 Plankton Data
df_plank_2011 = pd.read_csv(plankton_file_2011, header=15,
                            usecols=(1,2,3,4,5,6,7,23,24))
for i in range(1,47): #converts day number from string to int
  string_day11 = df_plank_2011['DAY'][i]
  num_day11 = int(string_day11)
  df_plank_2011['DAY'][i] = num_day11

for i in range(1,47): #converts volume value from string to float
  string_vol11 = df_plank_2011[' VALUE-per-volu'][i]
  string_vol11 = string_vol11.strip()
  num_vol11 = float(string_vol11)
  df_plank_2011[' VALUE-per-volu'][i] = num_vol11

for i in range(1,47): #converts local decimal time value from string to float
  string_time11 = df_plank_2011['TIMEloc'][i]
  string_time11 = string_time11.strip()
  num_time11 = float(string_time11)
  df_plank_2011['TIMEloc'][i] = num_time11

df_plank_2011 = df_plank_2011[12:45] #sliced out june values
volume_2011 = df_plank_2011[' VALUE-per-volu']
day_2011 = (df_plank_2011['DAY']*24 + df_plank_2011['TIMEloc'])/24

#display(df_plank_2011)
#for col in df_plk8.columns:
#  print(col)

plank_2008_mean = volume_2008.mean() #finds means and the difference between them
plank_2011_mean = volume_2011.mean()
plankton_diff= abs(plank_2008_mean - plank_2011_mean)
print('2008 Plankton mean:',plank_2008_mean,'|| 2011 Plankton mean:',plank_2011_mean) #prints means

#Plankton Plots
#2008 Plot
fig,(ax0, ax1) = plt.subplots(2, figsize=(18,16))
plank_plt_2008 = ax0.scatter(day_2008, volume_2008)
  #labels and grid
ax0.set_xlabel('Day', size=14, family='serif')
ax0.grid()
ax0.set_ylabel('Volume of Zooplankton (ml/m^3)', size=14, family='serif')
ax0.set_title('Volume of Zooplankton in July in the Gulf of Mexico (2008)', 
              size=18, family='serif')

#2011 Plot
plank_plt_2011 = ax1.scatter(day_2011, volume_2011, c='darkorange')
  #labels and grid
ax1.set_xlabel('Day', size=14, family='serif')
ax1.grid()
ax1.set_ylabel('Volume of Zooplankton (ml/m^3)', size=14, family='serif')
ax1.set_title('Volume of Zooplankton in July in the Gulf of Mexico (2011)', 
              size=18, family='serif')

#comparison graph
fig,(ax0,ax1) = plt.subplots(ncols=2, figsize=(20,10))
oxy_compare = ax0.bar(['2008','2011'],[oxy_2008_mean,oxy_2011_mean], color=['rebeccapurple','indigo']) #draws oxy graph
  #labels for oxygen
ax0.set_xlabel('Year', size=14, family='serif')
ax0.set_ylabel('Average Oxygen Concentration (ug/L)',  size=14, family='serif')
ax0.set_title('Change in Oxygen Concentration (2008-2011)',size=18, family='serif')
ax0.grid(color='darkgrey',alpha=.2)

plank_comapre = ax1.bar(['2008','2011'],[plank_2008_mean, plank_2011_mean], #draws plankton data
                        color=['cornflowerblue', 'royalblue']) 
  #labels for plankton
ax1.set_title('Change in Plankton Volume (2008-2011)',size=18, family='serif')
ax1.set_xlabel('Year', size=14, family='serif')
ax1.set_ylabel('Average Volume of Zooplankton(mL/m^3)', size=14, family='serif')
ax1.grid(color='darkgrey',alpha=.2)